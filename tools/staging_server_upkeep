#!/usr/bin/env python3.7
# Copyright (c) 2011-2020 Eric Froemling
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# -----------------------------------------------------------------------------
"""Perform various tidying on the staging server."""

from __future__ import annotations

import sys
import os
import subprocess
import stat
from pathlib import Path
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    pass


def run() -> None:
    """Do the thing."""
    rootdir = 'files.ballistica.net/cache/ba1'
    assert os.path.isdir(rootdir)

    # Just make a temp file to get 'now'.
    # (ugly but effective)
    tmppath = Path('_tmp_time_test')
    tmppath.touch()
    curtime = tmppath.stat()[stat.ST_ATIME]
    tmppath.unlink()

    oldest_age = 0

    for root, _dirnames, fnames in os.walk(rootdir):
        for fname in fnames:
            # print('doing', os.path.join(root, fname))
            fstat = os.stat(os.path.join(root, fname))
            accesstime = fstat[stat.ST_MTIME]
            age = curtime - accesstime
            oldest_age = max(oldest_age, age)
            # print('was', (curtime - accesstime)/60, 'min')
        # print('TEMP BREW')
        # break
    print('oldest is', oldest_age / 60 / 60 // 24, 'day')


def remote_run() -> None:
    """Upload and execute ourself."""

    print(f'Uploading {__file__}...')
    subprocess.run(['rsync', __file__, 'ubuntu@ballistica.net:'], check=True)

    subprocess.run([
        'ssh', 'ubuntu@ballistica.net',
        './staging_server_upkeep -run && rm staging_server_upkeep'
    ],
                   check=True)
    print('SUCCESS')


if __name__ == '__main__':
    if '-run' in sys.argv:
        run()
    else:
        remote_run()
